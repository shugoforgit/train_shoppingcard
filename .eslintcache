[{"D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\index.js":"1","D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\App.js":"2","D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\models\\cart.js":"3","D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\models\\products.js":"4","D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\components\\Chioce\\Chioce.js":"5","D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\components\\Show\\Show.js":"6","D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\components\\Cart\\Cart.js":"7","D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\api\\index.js":"8","D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\assets\\Font.js":"9"},{"size":387,"mtime":1608865741000,"results":"10","hashOfConfig":"11"},{"size":532,"mtime":1608865741000,"results":"12","hashOfConfig":"11"},{"size":3910,"mtime":1608865741000,"results":"13","hashOfConfig":"11"},{"size":10182,"mtime":1608865741000,"results":"14","hashOfConfig":"11"},{"size":1363,"mtime":1608865741000,"results":"15","hashOfConfig":"11"},{"size":5206,"mtime":1608865741000,"results":"16","hashOfConfig":"11"},{"size":6694,"mtime":1608865741000,"results":"17","hashOfConfig":"11"},{"size":363,"mtime":1608865741000,"results":"18","hashOfConfig":"11"},{"size":216,"mtime":1608865741000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1usokjp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\index.js",[],["41","42"],"D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\App.js",[],"D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\models\\cart.js",[],"D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\models\\products.js",[],"D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\components\\Chioce\\Chioce.js",[],"D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\components\\Show\\Show.js",["43","44"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Menu,\n  Button,\n  Dropdown,\n  Card,\n  Image,\n  message,\n  Tag,\n  Popover,\n  Spin,\n} from \"antd\";\nimport \"./show.css\";\nimport \"antd/dist/antd.css\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { connect } from \"dva\";\n\nconst Show = ({ dispatch, products, importLoading, getLoading, load }) => {\n  useEffect(() => {\n    if (window.localStorage.show_data) {\n      dispatch({\n        type: \"products/setStorage\",\n        payload: {\n          load: false,\n        },\n      });\n    } else {\n      dispatch({\n        type: \"products/fetch\",\n        payload: {\n          page: 1,\n          load: true,\n        },\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"allWife\">\n      <Row className=\"choose\" gutter={[10, 10]}>\n        <Col xs={24} sm={12}>\n          发现{products.length}件商品\n        </Col>\n        <Col xs={24} sm={12}>\n          排序&nbsp;&nbsp;\n          <Dropdown\n            overlay={\n              <Menu>\n                <Menu.Item\n                  onClick={() => {\n                    dispatch({\n                      type: \"products/recoverDefault\",\n                    });\n                  }}\n                >\n                  默认排序\n                </Menu.Item>\n                <Menu.Item\n                  onClick={() => {\n                    dispatch({\n                      type: \"products/changeUp\",\n                    });\n                  }}\n                >\n                  价格升序\n                </Menu.Item>\n                <Menu.Item\n                  onClick={() => {\n                    dispatch({\n                      type: \"products/changeDown\",\n                    });\n                  }}\n                >\n                  价格降序\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              排序选择 <DownOutlined />\n            </a>\n          </Dropdown>\n        </Col>\n      </Row>\n      <Spin\n        tip=\"加载中\"\n        spinning={load ? importLoading : getLoading}\n        style={{ marginTop: \"200px\" }}\n      >\n        <Row gutter={[20, 20]}>\n          {products.map((item, index) => {\n            return (\n              <Col\n                xs={24}\n                sm={12}\n                md={12}\n                lg={8}\n                xl={6}\n                xxl={6}\n                key={index + item}\n              >\n                <Card bordered hoverable className=\"wife\">\n                  <Image\n                    src={`./img/${item.sku}_1.jpg`}\n                    alt=\"图片未加载\"\n                    style={{ width: \"100%\" }}\n                  />\n                  <div className=\"price\">\n                    <div className=\"show-title\">{item.title}</div>\n                    <hr className=\"line\" />\n                    {item.currencyFormat}\n                    <span className=\"show-price\"> {item.price}</span>\n                  </div>\n                  <Popover\n                    content={item.availableSizes.map((current, index) => {\n                      return (\n                        <Button\n                          key={index}\n                          className=\"size-title\"\n                          disabled={item.installments === 0}\n                          onClick={() => {\n                            dispatch({\n                              type: \"cart/addCart\",\n                              payload: {\n                                product_id: item.id,\n                                quantity: item.installments > 0 ? 1 : 0,\n                                size: current,\n                                product: item,\n                              },\n                            });\n                            message.success(\"添加购物车成功\");\n                            if (item.installments === 0) {\n                              message.warning(\"商品被买完啦\");\n                            }\n                          }}\n                        >\n                          {current}\n                        </Button>\n                      );\n                    })}\n                    title=\"尺码选择\"\n                  >\n                    <Button\n                      type=\"primary\"\n                      size=\"large\"\n                      style={{ width: \"100%\" }}\n                    >\n                      添加\n                    </Button>\n                  </Popover>\n                  <Tag className=\"tag\" color=\"#2db7f5\">\n                    {item.isFreeShipping ? \"isFreeShipping\" : \"noFreeShipping\"}\n                  </Tag>\n                  <span className=\"kucun\">库存：{item.installments}</span>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Spin>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ products, loading }) => ({\n  products: products.sortData,\n  importLoading: loading.effects[\"products/fetch\"],\n  getLoading: loading.effects[\"products/setStorage\"],\n  load: products.load,\n});\n\nexport default connect(mapStateToProps)(Show);\n","D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\components\\Cart\\Cart.js",["45"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, Button, List, Row, Col, Badge, Image, Modal } from \"antd\";\nimport { connect } from \"dva\";\nimport MyIcon from \"../../assets/Font\";\nimport \"./cart.css\";\nimport \"antd/dist/antd.css\";\n\nconst Cart = ({ data, dispatch }) => {\n  useEffect(() => {\n    if (window.localStorage.cart_data) {\n      dispatch({\n        type: \"cart/updateCart\",\n      });\n    }\n  }, []);\n  const [visible, serVisible] = useState(0);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const total = data\n    .reduce((total, item) => {\n      return total + item.quantity * item.product.price;\n    }, 0)\n    .toFixed(2);\n  const count = data.reduce((total, item) => {\n    return total + item.quantity;\n  }, 0);\n  function getWidth() {\n    let cart_width = 0;\n    let w = document.documentElement.clientWidth;\n    if (w > 1300) {\n      cart_width = 30;\n    } else if (w <= 1300 && w > 1000) {\n      cart_width = 40;\n    } else if (w <= 1000 && w > 700) {\n      cart_width = 60;\n    } else if (w <= 700 && w > 600) {\n      cart_width = 70;\n    } else if (w <= 600) {\n      cart_width = 100;\n    }\n    return cart_width;\n  }\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n  const handleOk = () => {\n    dispatch({\n      type: \"cart/clearCar\",\n      payload: {\n        cart_quantity: data,\n      },\n    });\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  return (\n    <div>\n      <div className=\"small_cart\">\n        <MyIcon\n          type=\"icon-gouwuche\"\n          onClick={() => {\n            serVisible(1);\n          }}\n        />\n        <Badge count={count} className=\"head-example\"></Badge>\n      </div>\n\n      <div>\n        <Drawer\n          title={\n            <div className=\"inside-cart\">\n              <div className=\"content-title\">\n                <MyIcon type=\"icon-gouwuche1\" />\n                <Badge count={count} className=\"badge-inside\"></Badge>\n                <span className=\"cart-title\">Cart</span>\n              </div>\n            </div>\n          }\n          footer={\n            <div>\n              <div className=\"total\">\n                <Row>\n                  <Col span={12}>总价</Col>\n                  <Col span={12}>${total}</Col>\n                </Row>\n              </div>\n              <Button\n                type=\"primary\"\n                style={{ marginTop: \"20px\" }}\n                block\n                onClick={showModal}\n              >\n                清空购物车\n              </Button>\n            </div>\n          }\n          placement=\"right\"\n          closable={true}\n          onClose={() => {\n            serVisible(0);\n          }}\n          visible={visible}\n          width={`${getWidth()}%`}\n        >\n          <List\n            bordered\n            dataSource={data}\n            itemLayout=\"vertical\"\n            size=\"large\"\n            renderItem={(item, index) => (\n              <List.Item key={item.sku}>\n                <Row gutter={[10, 0]}>\n                  <Col span={8}>\n                    <Image\n                      src={`./img/${item.product.sku}_2.jpg`}\n                      alt=\"裂开\"\n                      className=\"imgs\"\n                    />\n                  </Col>\n                  <Col span={8}>\n                    <p>{item.product.title}</p>\n                    <div className=\"cart-good-name\">\n                      <span>\n                        {item.size} | {item.product.style}\n                      </span>\n                    </div>\n                    <p className=\"cart-quantity\">Quantity:{item.quantity}</p>\n                  </Col>\n                  <Col span={8} className=\"cart_right\">\n                    <Button\n                      className=\"exit\"\n                      onClick={(index) => {\n                        dispatch({\n                          type: \"cart/deleteItem\",\n                          payload: {\n                            delete_id: item.product_id,\n                            size: item.size,\n                            index: index,\n                            quantity: item.quantity,\n                          },\n                        });\n                      }}\n                    >\n                      ×\n                    </Button>\n                    <div className=\"cart-good-price-box\">\n                      <p className=\"cart-good-price\">\n                        {item.product.currencyFormat}\n                        {item.product.price}\n                      </p>\n                    </div>\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        disabled={item.quantity === 1}\n                        onClick={() => {\n                          dispatch({\n                            type: \"cart/decrease\",\n                            payload: {\n                              id: item.product_id,\n                              Csize: item.size,\n                            },\n                          });\n                        }}\n                        size=\"small\"\n                      >\n                        -\n                      </Button>\n                      &nbsp;\n                      <Button\n                        type=\"primary\"\n                        onClick={() => {\n                          dispatch({\n                            type: \"cart/increase\",\n                            payload: {\n                              id: item.product_id,\n                              remainder: item.product.installments > 0 ? 1 : 0,\n                              Csize: item.size,\n                            },\n                          });\n                        }}\n                        size=\"small\"\n                      >\n                        +\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </List.Item>\n            )}\n          />\n          <Modal\n            title=\"清空购物车\"\n            visible={isModalVisible}\n            onOk={handleOk}\n            onCancel={handleCancel}\n          >\n            <p>\n              确认清空购物车吗？当前总价\n              <span style={{ fontWeight: \"500\", fontSize: \"20px\" }}>\n                ${total}\n              </span>\n              ， 总共<strong style={{ fontSize: \"20px\" }}>{count}</strong>件商品\n            </p>\n            <p>没有结算页面就直接写个清空购物车</p>\n          </Modal>\n        </Drawer>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    data: state.cart.data,\n  };\n};\n\nexport default connect(mapStateToProps)(Cart);\n","D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\api\\index.js",[],"D:\\vscode\\Microsoft VS Code\\workspace\\shoppingcard\\src\\assets\\Font.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":28,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"55","line":38,"column":6,"nodeType":"56","endLine":38,"endColumn":8,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"55","line":15,"column":6,"nodeType":"56","endLine":15,"endColumn":8,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["61"],["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"63","fix":"65"},"Update the dependencies array to be: [dispatch]",{"range":"66","text":"67"},{"range":"68","text":"67"},[714,716],"[dispatch]",[421,423]]